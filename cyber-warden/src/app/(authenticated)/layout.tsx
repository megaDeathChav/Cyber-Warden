"use client";

import React from 'react';
import './globals.css';
import type { Metadata } from 'next'
import { Inter } from 'next/font/google'

import { Sidebar, Menu, MenuItem, SubMenu, menuClasses, MenuItemStyles } from '../..';
import { CSSObject } from '@emotion/styled';
import { useState } from "react";
import { Typography } from "@mui/material";
import Link from 'next/link';
import Image from 'next/image';



// icon import
import { Diamond } from '../../icons/Diamond';
import DarkModeOutlinedIcon from '@mui/icons-material/DarkModeOutlined';
import LightModeOutlinedIcon from '@mui/icons-material/LightModeOutlined';
import { InkBottle } from '../../icons/InkBottle';
import LogoutOutlinedIcon from '@mui/icons-material/LogoutOutlined';
import { Service } from '../../icons/Service';
import HomeOutlinedIcon from "@mui/icons-material/HomeOutlined";

// default root layout stuff
const inter = Inter({ subsets: ['latin'] })

export const metadata: Metadata = {
  title: 'Cyber Warden',
  description: 'Generated by create next app',
}

// default root layout stuff

type Theme = 'light' | 'dark';

const themes = {
  light: {
    sidebar: {
      backgroundColor: '#ffffff',
      color: '#607489',
    },
    menu: {
      menuContent: '#fbfcfd',
      icon: '#0098e5',
      hover: {
        backgroundColor: '#c5e4ff',
        color: '#44596e',
      },
      disabled: {
        color: '#9fb6cf',
      },
    },
  },
  dark: {
    sidebar: {
      backgroundColor: '#0b2948',
      color: '#8ba1b7',
    },
    menu: {
      menuContent: '#082440',
      icon: '#59d0ff',
      hover: {
        backgroundColor: '#00458b',
        color: '#b6c8d9',
      },
      disabled: {
        color: '#3e5e7e',
      },
    },
  },
};

export interface MenuItemStylesParams {
  level: number;
  disabled: boolean;
  active: boolean;
  isSubmenu: boolean;
  open?: boolean;
}

export type ElementStyles = CSSObject | ((params: MenuItemStylesParams) => CSSObject | undefined);

interface MenuItemType {
  title: string;
  to: string;
  icon: JSX.Element;
}


export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {

  const [collapsed, setCollapsed] = useState(false);
  const [theme, setTheme] = useState<Theme>('light');

  /* 
  The hexToRgba function is intended to convert a hexadecimal color code to its equivalent RGBA (red, green, blue, alpha) values.

  The function takes a hexadecimal color code as its only argument. The color code must be in the format #rrggbb, where rr, gg, and bb are each two
  hexadecimal digits representing the red, green, and blue components of the color, respectively.

  The function returns an object with four properties: r, g, b, and a. The r, g, and b properties represent the red, green, and blue components of the 
  color, respectively, and are each a number between 0 and 255. The a property represents the alpha channel of the color, and is a number between 0 and 1.
  */  

  const hexToRgba = (hex: string, alpha: number) => {
    const r = parseInt(hex.slice(1, 3), 16);
    const g = parseInt(hex.slice(3, 5), 16);
    const b = parseInt(hex.slice(5, 7), 16);
  
    return `rgba(${r}, ${g}, ${b}, ${alpha})`;
  };
  
  const menuItemStyles: MenuItemStyles = {
    root: {
      fontSize: '13px',
      fontWeight: 400,
    },
    icon: {
      color: themes[theme].menu.icon,
      [`&.${menuClasses.disabled}`]: {
        color: themes[theme].menu.disabled.color,
      },
    },
    SubMenuExpandIcon: {
      color: '#b6b7b9',
    },
    subMenuContent: ({ level }) => ({
      backgroundColor:
        level === 0
          ? hexToRgba(themes[theme].menu.menuContent, !collapsed ? 0.4 : 1)
          : 'transparent',
    }),
    button: {
      [`&.${menuClasses.disabled}`]: {
        color: themes[theme].menu.disabled.color,
      },
      '&:hover': {
        backgroundColor: hexToRgba(themes[theme].menu.hover.backgroundColor, 1),
        color: themes[theme].menu.hover.color,
      },
    },
    label: ({ open }) => ({
      fontWeight: open ? 600 : undefined,
    }),
  };

  return (
    <html lang="en">
      <body className={inter.className} style={{ display: 'flex', height: '100%' }}>
        <Sidebar
          collapsed={collapsed}
          image=""
          breakPoint="md"
          backgroundColor={hexToRgba(themes[theme].sidebar.backgroundColor, 1)}
          rootStyles={{
            color: themes[theme].sidebar.color,
          }}
        >
          <div style={{ display: 'flex', flexDirection: 'column', minHeight: '100%' }}>
              <Menu menuItemStyles={menuItemStyles}>
                <MenuItem icon={                
                  <Image
                    alt="profile-user"
                    width={80}
                    height={80}
                    src='/assets/logo.png'
                  />} 
                  // callback function (maybe make notes on callback functions :D)
                  onClick={() => setCollapsed(!collapsed)} 
                  > 
                    <div className='flex items-center justify-center pr-4'>
                      {!collapsed ?         
                        <Typography variant="subtitle1" fontWeight={600} color={theme === 'dark' ? "#0098e5" : "#4DBAFF"}>
                          Cyber Warden
                        </Typography> 
                      :
                        ''}
                    </div>
                    
                  </MenuItem>

                  {/* render line with different colors based on theme */}
                  {
                  theme === "light" ?
                    <div className="border-t border-gray-300 w-full dark:bg-gray-300"></div>
                  :
                    <div className="border-t border-gray-700 w-full dark:bg-gray-700"></div>
                  }

              </Menu>
            <div style={{ flex: 1, marginBottom: '40px' }}>
              <div style={{ padding: '15px 24px 0', marginBottom: '8px'}}>
                <Typography
                  variant="body2"
                  fontWeight={600}
                  style={{ opacity: collapsed ? 0 : 0.7, letterSpacing: '0.5px' }}
                >
                  General
                </Typography>
              </div>
              <Menu menuItemStyles={menuItemStyles}>
                <MenuItem icon={<HomeOutlinedIcon />} component={<Link href='/'/>}>
                  Home
                </MenuItem>

                {/* TEMPORARY !!! */}
                <SubMenu label="Theme" icon={<InkBottle />}>
                  <MenuItem icon={<LightModeOutlinedIcon />} onClick={() => setTheme('light')}> Light</MenuItem>
                  <MenuItem icon={<DarkModeOutlinedIcon />} onClick={() => setTheme('dark')}> Dark</MenuItem>
                </SubMenu>
                {/* TEMPORARY !!! */}

                {/* HERE AS AN EXAMPLE OF NESTED SUBMENU's */}
                <SubMenu label="Components" icon={<Diamond />}>
                  <MenuItem> Grid</MenuItem>
                  <MenuItem> Layout</MenuItem>
                  <SubMenu label="Forms">
                    <MenuItem> Input</MenuItem>
                    <MenuItem> Select</MenuItem>
                  </SubMenu>
                </SubMenu>
                {/* HERE AS AN EXAMPLE OF NESTED SUBMENU's */}

              </Menu>

              <div style={{ padding: '0 24px', marginBottom: '8px', marginTop: '32px' }}>
                <Typography
                  variant="body2"
                  fontWeight={600}
                  style={{ opacity: collapsed ? 0 : 0.7, letterSpacing: '0.5px' }}
                >
                  Extra
                </Typography>
              </div>

              <Menu menuItemStyles={menuItemStyles}>
                <MenuItem icon={<LogoutOutlinedIcon />} component={<Link href='/login'/>}>
                  Logout
                </MenuItem>
                <MenuItem disabled icon={<Service />}>
                  Examples
                </MenuItem>
              </Menu>
            </div>
          </div>
        </Sidebar>
        {children}
      </body>
    </html>
  )
}
